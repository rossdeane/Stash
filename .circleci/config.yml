# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.1-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout

      - run:
          name: Dependencies
          command: |
            sudo -E apt-get update
            sudo -E apt-get install -y mysql-client libpng-dev libxml2-dev
            sudo -E docker-php-ext-install mysqli gd xmlrpc zip
            sudo -E pecl install apcu <<< '' || sudo -E pecl install apcu-4.0.11 <<< ''
            sudo -E docker-php-ext-enable apcu
            echo "apc.enable=1" | sudo -E tee --append /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini
            echo "apc.enable_cli=1" | sudo -E tee --append /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini
            echo "memory_limit = 512M" | sudo -E tee --append /usr/local/etc/php/conf.d/docker-php-memory.ini

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      - run: chown -R $USER:$USER /tmp/pear/temp
      - run: tests/travis/php_setup.sh
      - run: tests/travis/redis_setup.sh

      - run: ./tests/runTests.sh

      - run: php vendor/bin/coveralls -v
